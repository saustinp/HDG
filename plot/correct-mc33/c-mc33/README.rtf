{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf510
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww28300\viewh15560\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 \
PRACTICAL CONSIDERATION ON MARCHING CUBES 33 TOPOLOGICAL CORRECTNESS\
\
The C-MC33 is the implementation of the Marching Cubes 33 (proposed by Lewiner et al. in their work \
Efficient implementation of Marching Cubes' cases with topological guarantees, http://zeus.mat.puc-rio.br/tomlew/publication_page.php?pubkey=marching_cubes_jgt) \
with the modification presented in our work. The modifications made on Lewiner et al.'s MC33 can be checked in the file diff/MarchingCubes_cpp.patch.\
\
\
USAGE\
\
The C-MC33 has as input a grid file (iso format), a isovalue (float) and a name to the resulting mesh (ply format). The iso format  for a nrrd file can be obtained using the IsoWriter or the IsoSubdivider.\
By executing ./C-MC33 is possible to see the list of inputs. \
As output the C-MC33 generate a mesh with the specified name.\
\
The grid files used on paper can be obtained at :\
\
http://www.crowdlabs.org/mc33_tc/wiki/WikiIndex/\
\
We also provide there 10000 Marching Cubes cases grids and randomly generated 5x5x5 grids.\
\
}